netg@DESKTOP-EBH0I8A:~/devnet/boot/boot-camp$ python3
Python 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> 
>>> 
>>> 
>>> 
>>> 
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> device = "Router"
>>> 
>>> 
>>> device[0]
'R'
>>> 
>>> device[1]
'o'
>>> 
>>> 
>>> help(str.index)

>>> 
>>> 
>>> 
>>> device.index(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: must be str, not int
>>> 
>>> 
>>> 
>>> device.index('t')
3
>>> 
>>> device.index('t')
3
>>> 
>>> 
>>> device[4]
'e'
>>> 
>>> if device[4] == 't':
...     print("Character found")
... 
>>> 
>>> 
>>> 
>>> 
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> 
>>> 
>>> 
>>> 
>>> ping_command = "ping 10.1.1.1 source 10.2.3.4"
>>> 
>>> 
>>> print(ping_command)
ping 10.1.1.1 source 10.2.3.4
>>> 
>>> 
>>> ping_command.index("10")
5
>>> 
>>> 
>>> ping_command[5]
'1'
>>> 
>>> 
>>> ping_command.index("1")
5
>>> 
>>> ping_command[5]
'1'
>>> 
>>> ping_command[5] = "2"
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> 
>>> 
>>> 
>>> 
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> 
>>> help(str.replace)

>>> 
>>> 
>>> 
>>> 
>>> ping_command
'ping 10.1.1.1 source 10.2.3.4'
>>> 
>>> 
>>> temp = ping_command.replace('1', '2')
>>> 
>>> 
>>> temp
'ping 20.2.2.2 source 20.2.3.4'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> help(str.replace)

>>> 
>>> 
>>> help(str.replace)

>>> 
>>> 
>>> temp = ping_command.replace('2', '1', count= 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: str.replace() takes no keyword arguments
>>> 
>>> temp = ping_command.replace('2', '1', 2)
>>> 
>>> 
>>> 
>>> 
>>> temp
'ping 10.1.1.1 source 10.1.3.4'
>>> 
>>> 
>>> temp = ping_command.replace('1', '2', 1)
>>> 
>>> temp
'ping 20.1.1.1 source 10.2.3.4'
>>> 
>>> 
>>> temp = ping_command.replace('1', '2', 3)
>>> 
>>> temp
'ping 20.2.2.1 source 10.2.3.4'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> temp = ping_command.replace('1', '2', 0)
>>> 
>>> 
>>> temp
'ping 10.1.1.1 source 10.2.3.4'
>>> 
>>> 
>>> 
>>> help(str.replace)

>>> 
>>> 
>>> ip = 1.1.1.1
  File "<stdin>", line 1
    ip = 1.1.1.1
            ^^
SyntaxError: invalid syntax
>>> 
>>> ip = "1.1.1.1"
>>> 
>>> 
>>> ip
'1.1.1.1'
>>> 
>>> 
>>> ip.replace("1", "2", 1)
'2.1.1.1'
>>> 
>>> ip.replace("1", "2", 1)
'2.1.1.1'
>>> 
>>> ip.replace("1", "2", 2)
'2.2.1.1'
>>> 
>>> 
>>> ip.replace("1", "2", 3)
'2.2.2.1'
>>> 
>>> ip.replace("1", "2", 4)
'2.2.2.2'
>>> 
>>> 
>>> ping_command = "ping 10.1.1.1 source 10.2.3.4"
>>> 
>>> 
>>> ping_command.replace("1", "2", 1)
'ping 20.1.1.1 source 10.2.3.4'
>>> 
>>> ping_command.replace("1", "2", 2)
'ping 20.2.1.1 source 10.2.3.4'
>>> 
>>> 
>>> ping_command.replace("1", "2", 3)
'ping 20.2.2.1 source 10.2.3.4'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> ip = "1.1.1.1"
>>> 
>>> 
>>> t = ip.replace("1", "2", 1)
>>> t
'2.1.1.1'
>>> 
>>> t = ip.replace("1", "2", 2)
>>> 
>>> t
'2.2.1.1'
>>> 
>>> t = ip.replace("1", "2", 3)
>>> 
>>> t
'2.2.2.1'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> dir(str)
['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition', 'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']
>>> 
>>> 
>>> 
>>> 
>>> ping_command = "ping 10.1.1.1 source 10.2.3.4"
>>> 
>>> 
>>> dst_ip = "10.1.1.1"
>>> 
>>> src_ip = "10.2.3.4"
>>> 
>>> ping_command = "ping" + dst_ip + "source" + src_ip
>>> 
>>> 
>>> ping_command
'ping10.1.1.1source10.2.3.4'
>>> 
>>> 
>>> ping_command = "ping " + dst_ip + " source " + src_ip
>>> 
>>> 
>>> ping_command
'ping 10.1.1.1 source 10.2.3.4'
>>> 
>>> 
>>> dst_ip = "2.2.2.2"
>>> src_ip = "3.3.3.3"
>>> 
>>> ping_command = "ping " + dst_ip + " source " + src_ip
>>> 
>>> ping_command
'ping 2.2.2.2 source 3.3.3.3'
>>> 
>>> 
>>> src_ip = "4.4.4.4"
>>> 
>>> dst_ip = "5.5.5.5"
>>> 
>>> 
>>> ping_command
'ping 2.2.2.2 source 3.3.3.3'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> ping_command = "ping " + "dest" + dst_ip + " source " + src_ip
>>> 
>>> 
>>> ping_command
'ping dest5.5.5.5 source 4.4.4.4'
>>> 
>>> 
>>> 
>>> ping_command = "ping " + "dest " + dst_ip + " source " + src_ip
>>> 
>>> 
>>> ping_command
'ping dest 5.5.5.5 source 4.4.4.4'
>>> 
>>> 
>>> 
>>> 
>>> ping_command = "ping " + dst_ip + " source " + src_ip
>>> 
>>> 
>>> ping_command
'ping 5.5.5.5 source 4.4.4.4'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 2 + 2
4
>>> 
>>> "a" + "b"
'ab'
>>> 
>>> "2" + "2"
'22'
>>> 
>>> 
>>> type(2)
<class 'int'>
>>> 
>>> type("2")
<class 'str'>
>>> 
>>> 2 + "2"
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 
>>> 2 + "2"
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> 
>>> 
>>> 2 + int("2")
4
>>> 
>>> var1 = 2
>>> 
>>> var2 = "2"
>>> 
>>> var1 + var2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> 
>>> 
>>> var1 + int(var2)
4
>>> 
>>> var2
'2'
>>> 
>>> 
>>> var1 + var2
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> 
>>> 
>>> 
>>> var1 + int(var2)
4
>>> 
>>> str(var1) + var2
'22'
>>> 
>>> 
>>> 
>>> vlan_id = 10
>>> 
>>> syntax = "vlan"
>>> 
>>> 
>>> vlan_command = syntax + vlan_id
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can only concatenate str (not "int") to str
>>> 
>>> 
>>> 
>>> vlan_command = syntax + str(vlan_id)
>>> 
>>> 
>>> vlan_command
'vlan10'
>>> 
>>> syntax = "vlan "
>>> 
>>> 
>>> 
>>> vlan_command = syntax + str(vlan_id)
>>> 
>>> vlan_command
'vlan 10'
>>> 
>>> 
>>> 
>>> 
>>> 
>>> ping_command = "ping {} source {}"
>>> 
>>> 
>>> help(str.format)

>>> 
>>> 
>>> 
>>> 
>>> help(str.format)

>>> 
>>> 
>>> ping_command = "ping {} source {}".format("1.1.1.1", "2.2.2.2")
>>> 
>>> 
>>> ping_command
'ping 1.1.1.1 source 2.2.2.2'
>>> 
>>> 
>>> 
>>> vlan_commnad = "vlan {}"
>>> 
>>> "vlan {}".format(10)
'vlan 10'
>>> 
>>> 
>>> 
>>> "vlan {}".format(20)
'vlan 20'
>>> 
>>> "vlan {}".format(30)
'vlan 30'
>>> 
>>> "vlan {}".format(100)
'vlan 100'
>>> 
>>> 
>>> 
>>> vlan_commnad = "vlan {}"
>>> vlan_id = 10
>>> 
>>> vlan_command.format(vlan_id)
'vlan 10'
>>> 
>>> 